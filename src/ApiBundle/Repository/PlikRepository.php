<?php

namespace ApiBundle\Repository;

use ApiBundle\Entity\Plik;
use ApiBundle\Exception\ZasobNieIstniejeException;
use ApiBundle\Model\Dane\Metody\Interfaces\StrumienSzkicInterface;
use ApiBundle\Model\Dane\Metody\Interfaces\UploadInterface;
use ApiBundle\Model\ProcesujDaneWejsciowe;

/**
 * PlikRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PlikRepository extends \Doctrine\ORM\EntityRepository
{
    public function pobierzSciezkeDoZasobu($zasob)
    {
        $encja = $this->findOneBy(['idZasobu' => $zasob, 'czyUsuniety' => false]);

        if (!$encja instanceof Plik) {
            throw new ZasobNieIstniejeException();
        }

        return $encja->getSciezka();
    }

    /**
     * @param $idZasobu
     * @param $elementyDoZmiany
     */
    public function zmodyfikujZasob($idZasobu, $elementyDoZmiany)
    {
        $managerEncji = $this->getEntityManager();
        /**
         * @var $encja Plik
         */
        $encja = $this->findOneBy(['idZasobu' => $idZasobu, 'czyUsuniety' => false]);

        $elementyDoZmiany = array_filter($elementyDoZmiany);

        if (isset($elementyDoZmiany['pierwotna_nazwa'])) {
            $encja->setPierwotnaNazwa($elementyDoZmiany['pierwotna_nazwa']);
        }
        if (isset($elementyDoZmiany['czy_usuniety'])) {
            $encja->setCzyUsuniety($elementyDoZmiany['czy_usuniety']);
        }

        $managerEncji->persist($encja);
        $managerEncji->flush();
    }

    /**
     * @param UploadInterface $upload
     */
    public function zapiszEncjeWBazieUpload(UploadInterface $upload): void
    {
        $managerEncji = $this->getEntityManager();

        foreach ($upload->pobierzKolekcjePlikow() as $danePliku) {
            $managerEncji->persist(ProcesujDaneWejsciowe::uzupelnijEncjePliku($danePliku, $upload->pobierzDaneUzytkownika()));
            $managerEncji->flush();
        }
    }

    /**
     * @param Plik $plik
     */
    public function zapiszPojedynczaEncjeWBazie(Plik $plik)
    {
        $managerEncji = $this->getEntityManager();
        $managerEncji->persist($plik);
        $managerEncji->flush();
    }

    public function usunMiekkoPlik($id_zasobu)
    {
        $managerEncji = $this->getEntityManager();

        try {
            $zasob = $this->findOneBy(['idZasobu' => $id_zasobu]);

            /**
             * @var $zasob Plik
             */

            $zasob->setCzyUsuniety(true);
            $managerEncji->persist($zasob);
            $managerEncji->flush();
        } catch (\Exception $exception) {

        }
        return true;
    }

    /**
     * @param StrumienSzkicInterface $strumienSzkic
     */
    public function stworzSzkicPlikuWBazie(StrumienSzkicInterface $strumienSzkic)
    {
        $managerEncji = $this->getEntityManager();

    }
}
